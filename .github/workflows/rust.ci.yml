name: "Rust"

on:
  push:

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "Test: [${{ matrix.arch.short-name }}] [${{ matrix.mode.short-name }}/${{ matrix.toolchain.short-name }}]"
    runs-on: "${{ matrix.arch.os }}-latest"
    strategy:
      matrix:
        arch:
          - os: "ubuntu"
            target: "x86_64-unknown-linux-gnu"
            short-name: "linux/gnu"

          - os: "ubuntu"
            target: "x86_64-unknown-linux-musl"
            short-name: "linux/musl"

          - os: "windows"
            target: "x86_64-pc-windows-msvc"
            short-name: "win/msvc"

          - os: "macos"
            target: "x86_64-apple-darwin"
            short-name: "mac/x86"

          - os: "macos"
            target: "aarch64-apple-darwin"
            short-name: "mac/arm"

        toolchain:
          - name: "stable"
            short-name: "sbl"

          - name: "beta"
            short-name: "b"

          - name: "nightly"
            short-name: "ngt"

        mode:
          - name: "debug"
            flag: ""
            dir: "debug"
            short-name: "dbg"

          - name: "release"
            flag: "--release"
            dir: "release"
            short-name: "rl"

    env:
      PUZZLE_OUT_DIR: target/${{ matrix.arch.target }}/${{ matrix.mode.dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Install
        run: rustup update ${{ matrix.toolchain.name }} && rustup default ${{ matrix.toolchain.name }} && rustup target add ${{ matrix.arch.target }}

      - name: Build
        run: cargo build --verbose --target ${{ matrix.arch.target }} ${{ matrix.mode.flag }}

      - name: Show Build Files
        run: ls -lahs $PUZZLE_OUT_DIR
        shell: bash

      - name: Test
        run: cargo test --verbose ${{ matrix.mode.flag }}
  clippy:
    name: "Clippy: [${{ matrix.toolchain.short-name }}]"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - name: "stable"
            short-name: "sbl"

          - name: "beta"
            short-name: "b"

          - name: "nightly"
            short-name: "ngt"
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4

      - name: Install
        run: rustup update ${{ matrix.toolchain.name }} && rustup default ${{ matrix.toolchain.name }}

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
