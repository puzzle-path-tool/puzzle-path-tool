name: "Rust"

on:
  push:

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "Rust Test: [${{ matrix.arch.os }}/${{ matrix.arch.target }}] [${{ matrix.toolchain }}]"
    runs-on: "${{ matrix.arch.os }}-latest"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - { os: ubuntu, target: x86_64-unknown-linux-gnu }
          - { os: ubuntu, target: x86_64-unknown-linux-musl }
          - { os: ubuntu, target: aarch64-unknown-linux-gnu }
          - { os: windows, target: x86_64-pc-windows-msvc }
          - { os: macos, target: x86_64-apple-darwin }
          - { os: macos, target: aarch64-apple-darwin }
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v4

      - name: Install
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }} && rustup target add ${{ matrix.arch.target }}

      - name: Build
        run: |
          cargo build --verbose --target ${{ matrix.arch.target }}
          tree target/

      - name: Show Build Files (Ubuntu)
        if: matrix.arch.os == 'ubuntu'
        run: tree target/

      - name: Show Build Files (Windows)
        if: matrix.arch.os == 'windows'
        run: tree /F /A target/

      - name: Show Build Files (Mac)
        if: matrix.arch.os == 'macos'
        run: |
          brew install tree && tree target/

      - name: Test
        run: cargo test --verbose
